# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="_JKq[m=o8OG;]F8xD:bGMs^/?KXXb2Huq^KLM=obhIQvsPIwPNJq@sgLWTRCLr4]"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# global=Global

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=
db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:database/leonweb"

# Evolutions
# ~~~~~
evolutionplugin=enabled
applyEvolutions.default=true

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Logger provided to your leon.web.services.UserService:
logger.services.UserService=INFO

# setup.conf is out of git and specifies the following setup-specific parameters:
app.prefix=""
app.ssl=false
app.url=""
assets.production.external.dir="./"
http.port=9000
auth.github.clientId=""
auth.github.clientSecret=""
repositories.path=""

include "setup.conf"

# GitHub Service
services.github.timeout=10

# Authentication (SecureSocial)
include "securesocial.conf"

# Specifies the classpath used by the Scala compiler within Leon
# app.classpath="../library/target/scala-2.9.2/"
